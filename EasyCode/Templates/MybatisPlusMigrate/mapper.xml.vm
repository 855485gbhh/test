##引入mybatis支持
$!{mybatisCodehelper.vm}
$!{mybatisSupport.vm}


##设置保存名称与保存位置
#set($XmlSavePath = $tool.append(${mapperXmlFolder},"/",${mapperXmlPackage.replace(".","/")}))
$!callback.setSavePath($XmlSavePath)
$!callback.setFileName($tool.append($!{tableInfo.name}, $!{mapperSuffix},".xml"))

#set($daoName = $tool.append($tableInfo.name, ${daoSuffix}))

##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${mapperPackageName}.${daoName}">

    <resultMap id="BaseResultMap" type="$!{modelPackageName}.pojo.entity.$!{entityName}">
        <!--@Table $!{tableInfo.obj.name}-->
        #foreach($column in $tableInfo.fullColumn)
            <result property="$!column.name" column="$!column.obj.name" jdbcType="$!column.ext.jdbcType"/>
        #end
    </resultMap>

    <sql id="BASE_SELECT">
           #allSqlColumn()
    </sql>

    <!-- 通过id查询 -->
    <select id="getbyid" resultMap="BaseResultMap">
        select <include refid="BASE_SELECT"/>
        from $!{tableInfo.obj.name}
        where ${tableInfo.pkColumn.get(0).obj.name} = #{$tool.getJavaName("${tableInfo.pkColumn.get(0).obj.name}")}
    </select>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="$!pk.name" useGeneratedKeys="true">
        insert into $!{tableInfo.obj.name}
             (#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($foreach.hasNext), #end#end)
        values
        <foreach collection="$!{tableInfo.obj.name}s" item="$!{tableInfo.obj.name}" separator=",">
        (#foreach($column in $tableInfo.otherColumn)#{$!{tableInfo.obj.name}.$!{column.name}}#if($foreach.hasNext), #end#end)
        </foreach>
    </insert>

    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="$!pk.name" useGeneratedKeys="true">
        insert into $!{tableInfo.obj.name}
            (#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($foreach.hasNext), #end#end)
        values
        <foreach collection="$!{tableInfo.obj.name}s" item="$!{tableInfo.obj.name}" separator=",">
            (#foreach($column in $tableInfo.otherColumn)#{$!{column.name}}#if($foreach.hasNext), #end#end)
        </foreach>
        on duplicate key update
         #foreach($column in $tableInfo.otherColumn)$!column.obj.name = values($!column.obj.name) #if($foreach.hasNext), #end#end
    </insert>

</mapper>
